# Generated by Django 4.1.2 on 2022-10-23 21:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fullname", models.CharField(max_length=20)),
                (
                    "userType",
                    models.CharField(
                        choices=[
                            ("CANDIDATE", "candidate"),
                            ("SCHOOL TEACHER", "School Teacher"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        max_length=12,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be entered in the define format",
                                regex="^\\+?1?\\d{9,12}$",
                            )
                        ],
                    ),
                ),
                ("username", models.CharField(max_length=20, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=20)),
                ("address", models.CharField(blank=True, max_length=200)),
                ("timestamps", models.DateTimeField(auto_now_add=True)),
                (
                    "date_joined",
                    models.DateTimeField(auto_now_add=True, verbose_name="date joined"),
                ),
                (
                    "last_login",
                    models.DateTimeField(auto_now=True, verbose_name="last login"),
                ),
                ("is_admin", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
            ],
            options={"abstract": False},
        ),
        migrations.CreateModel(
            name="Exams",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("exam_name", models.CharField(max_length=50)),
                ("no_of_ques", models.CharField(max_length=20)),
                ("total_marks", models.CharField(max_length=20)),
                ("time_duration", models.DurationField(default="00:00:00")),
                ("timestamps", models.DateTimeField(auto_now_add=True)),
                (
                    "exam_status",
                    models.BooleanField(
                        choices=[("OPEN", "Open"), ("CLOSE", "Close")],
                        default="OPEN",
                        max_length=25,
                    ),
                ),
                (
                    "createdby",
                    models.ForeignKey(
                        limit_choices_to={"groups__name": "Professor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                ("qno", models.AutoField(primary_key=True, serialize=False)),
                (
                    "questionCategory",
                    models.CharField(
                        choices=[
                            {"I.beginners", "I.BEGINNERS"},
                            (
                                "QUESTION TYPE_BEGINNERS",
                                (
                                    ("I.1. traffic light", "I.1. TRAFFIC LIGHT "),
                                    ("I.2. ubwikorezi", " I.2. UBWIKOREZI"),
                                    (
                                        "I.3. ibyerekeyekugenda mu muhanda",
                                        " I.3. IBYEREKEYE KUGENDA MU MUHANDA",
                                    ),
                                ),
                            ),
                            (
                                "QUESTION TYPE_INTERMEDIATE",
                                (
                                    ("II.1. traffic light", "II.1. TRAFFIC LIGHT "),
                                    ("II.2. ubwikorezi", " II.2. UBWIKOREZI"),
                                    (
                                        "II.3. ibyerekeyekugenda mu muhanda",
                                        " II.3. IBYEREKEYE KUGENDA MU MUHANDA",
                                    ),
                                ),
                            ),
                            (
                                "QUESTION TYPE_ADVANCED",
                                (
                                    ("III.1. traffic light", "III.1. TRAFFIC LIGHT "),
                                    ("III.2. ubwikorezi", " III.2. UBWIKOREZI"),
                                    (
                                        "III.3. ibyerekeyekugenda mu muhanda",
                                        " III.3. IBYEREKEYE KUGENDA MU MUHANDA",
                                    ),
                                ),
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("marks", models.PositiveIntegerField(default=0)),
                ("question", models.TextField(max_length=500)),
                ("optionA", models.CharField(max_length=100)),
                ("optionB", models.CharField(max_length=100)),
                ("optionC", models.CharField(max_length=100)),
                ("optionD", models.CharField(max_length=100)),
                (
                    "answer",
                    models.CharField(
                        choices=[
                            ("A", "option1"),
                            ("B", "option2"),
                            ("C", "option3"),
                            ("D", "option4"),
                        ],
                        max_length=1,
                    ),
                ),
                ("timestamps", models.DateTimeField(auto_now_add=True)),
                ("status", models.BooleanField(default=False)),
                (
                    "createdby",
                    models.ForeignKey(
                        limit_choices_to={"groups__name": "Professor"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "exam_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="practice.exams"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Set",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("set_no", models.PositiveIntegerField(default=0)),
                (
                    "exam_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="practice.exams"
                    ),
                ),
                ("ques", models.ManyToManyField(to="practice.question")),
            ],
        ),
        migrations.CreateModel(
            name="Marks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "decision",
                    models.CharField(
                        choices=[{"PASS", "pass"}, {"fail", "FAIL"}], max_length=255
                    ),
                ),
                ("timestamps", models.DateTimeField(auto_now_add=True)),
                ("status", models.BooleanField(default=False)),
                (
                    "exam_name",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="practice.exams",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        limit_choices_to={"groups__name": "Student"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Candidates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("score", models.IntegerField(default=0)),
                ("status", models.BooleanField(default=False)),
                ("timestamps", models.DateTimeField(auto_now_add=True)),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="practice.exams"
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        limit_choices_to={"groups__name": "Student"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Answers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "answer",
                    models.CharField(
                        choices=[
                            ("A", "option1"),
                            ("B", "option2"),
                            ("C", "option3"),
                            ("D", "option4"),
                        ],
                        max_length=1,
                    ),
                ),
                ("timestamps", models.DateTimeField(auto_now_add=True)),
                ("status", models.BooleanField(default=False)),
                (
                    "aded_by",
                    models.ForeignKey(
                        limit_choices_to={"groups__name": "Professor"},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="practice.question",
                    ),
                ),
            ],
        ),
    ]
